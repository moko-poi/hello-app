on:
  push:
    branches:    
      - main
    paths:
      - 'RELEASE'
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
    paths:
      - 'RELEASE'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  gh-release:
    outputs:
      tag: ${{steps.release.outputs.tag}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: release
        uses: pipe-cd/actions-gh-release@11c42c4b9257c0e1b8580634b7b0e9510d352281
        with:
          release_file: 'RELEASE'
          token: ${{ secrets.GITHUB_TOKEN }}
  docker-build:
    outputs:
      tags: ${{steps.meta.outputs.tags}}
    needs: gh-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.gh-release.outputs.tag }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  register-event:
    if: ${{ github.event_name != 'pull_request' }}
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.docker-build.outputs.tags }}
      - uses: docker://gcr.io/pipecd/pipectl:v0.16.0
        with:
          args: event register --insecure --address=${{ secrets.PIPECD_API_ADDRESS }} --api-key=${{ secrets.PIPECD_API_KEY }} --name=dev-image-update --data=${{ needs.docker-build.outputs.tags }}
      - uses: docker://gcr.io/pipecd/pipectl:v0.16.0
        with:
          args: event register --insecure --address=${{ secrets.PIPECD_API_ADDRESS }} --api-key=${{ secrets.PIPECD_API_KEY }} --name=prod-image-update --data=${{ needs.docker-build.outputs.tags }}
